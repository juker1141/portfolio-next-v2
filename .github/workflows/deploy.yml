name: Deploy Next.js to EC2

on:
  push:
    branches:
      - main # 可以根据你的实际情况调整分支

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_USER: ${{ secrets.AWS_USER }}
      AWS_SERVER: ${{ secrets.AWS_SERVER }}
      AWS_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: arn:aws:iam::617893088694:role/GitHubAction-AssumeRoleWithAction
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up environment
        run: |
          echo "NEXT_PUBLIC_RECAPTCHA_SITE_KEY=${{ secrets.NEXT_PUBLIC_RECAPTCHA_SITE_KEY }}" >> .env.local
          echo "RECAPTCHA_SECRET_KEY=${{ secrets.RECAPTCHA_SECRET_KEY }}" >> .env.local
          echo "CONTACT_EMAIL=${{ secrets.CONTACT_EMAIL }}" >> .env.local
          echo "CONTACT_PASSWORD=${{ secrets.CONTACT_PASSWORD }}" >> .env.local

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: portfolio-next-v2
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -f Dockerfile-production.dockerfile --no-cache -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:latest

      # - name: Deploy to EC2
      #   uses: easingthemes/ssh-deploy@main
      #   with:
      #     SSH_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
      #     REMOTE_HOST: ${{ secrets.AWS_SERVER }}
      #     REMOTE_USER: ${{ secrets.AWS_USER }}
      #     ARGS: "-rlgoDzvc -i --delete"
      #     SOURCE: "/"
      #     TARGET: "/home/ec2-user/portfolio/"

      - name: Connect to AWS EC2 and deploy
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: portfolio-next-v2
        run: |
          echo "${AWS_PRIVATE_KEY}" > private_key && chmod 400 private_key

          scp -o StrictHostKeyChecking=no -i private_key ./docker-compose.yml ${AWS_USER}@${AWS_SERVER}:/home/ec2-user

          ssh -o StrictHostKeyChecking=no -i private_key ${AWS_USER}@${AWS_SERVER} "
            sudo mkdir -p /home/ec2-user/$REPOSITORY &&
            sudo mv /home/ec2-user/docker-compose-production.yml /home/ec2-user/$REPOSITORY/docker-compose.yml &&

            aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin 617893088694.dkr.ecr.ap-northeast-1.amazonaws.com &&
            docker rmi $REGISTRY/$REPOSITORY:latest -f || true
            docker-compose -f portfolio/docker-compose.yml down &&
            docker-compose -f portfolio/docker-compose.yml up -d
          "
